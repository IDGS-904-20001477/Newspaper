---
import qs from "qs";
import Layout from "../../../layouts/Layout.astro";
import BlogGridItem from "../../../components/BlogGridItem.astro";

export const getStaticPaths = async () => {
    let url = import.meta.env.STRAPI_URL + "/api/categories";

    const query = qs.stringify({
        populate: {
            posts: {
                populate: {
                    featuredImage: {
                        fields: ["name", "width", "height", "url"],
                    },
                    author: {
                        populate: {
                            bioImage: {
                                fields: ["name", "width", "height", "url"],
                            },
                        },
                    },
                    category: {
                        populate: true,
                    },
                },
            },
        },
    });

    const data = await fetch(url + "?" + query).then((response) =>
        response.json(),
    );

    return data.data.map((category) => {
        const { slug } = category.attributes;

        return {
            params: { slug: slug },
            props: { category: category },
        };
    });
};

const { category } = Astro.props;
const {
    Name: categoryName,
    posts: { data: postData },
} = category["attributes"];
---

<Layout title={categoryName}>
    <div class="w-full">
        <section class="container mx-auto my-10 ">
            <div class="w-full min-h-fit mt-10 my-8">
                <div class="flex items-end justify-items-start h-full w-full">
                    <div
                        class="bg-cyan-100 py-8 px-6 md:px-14 text-white border-l-[15px] border-blue-900 w-full"
                    >
                        <div>
                            <div class="w-full">
                                <div class="flex items-start justify-start">
                                    <h1
                                        class="mb-2 text-4xl font-bold text-left text-transparent bg-clip-text bg-gradient-to-r from-blue-800 to-blue-800 hover:to-blue-600 cursor-pointer transform hover:scale-105 transition-all duration-50000"
                                    >
                                        {categoryName}
                                    </h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="w-full my-4">
                <div class="container px-8 md:mx-auto md:px-0">
                    <div class="grid md:grid-cols-3 grid-cols-1 gap-7">
                        {postData.map((post) => <BlogGridItem post={post} />)}
                    </div>
                </div>
            </div>
        </section>
    </div>
</Layout>

